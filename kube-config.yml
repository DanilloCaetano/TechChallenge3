apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-deployment
  annotations:
    description: "Deployment for my-app with resource limits and volume mount"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-app
  template:
    metadata:
      labels:
        app: my-app
    spec:
      containers:
      - name: app-container
        image: docker.io/eduardo1219/regionservice
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: app-contact
  annotations:
    description: "Deployment for my-contact-api"
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-contact-api
  template:
    metadata:
      labels:
        app: my-contact-api
    spec:
      containers:
      - name: container-api
        image: docker.io/eduardo1219/contactservice
        ports:
        - containerPort: 8080
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer-region
  annotations:
    description: "Deployment for consumer region"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer-region-worker
  template:
    metadata:
      labels:
        app: consumer-region-worker
    spec:
      containers:
      - name: container-consumer-region-worker
        image: docker.io/eduardo1219/regionconsumer
        ports:
        - containerPort: 6060
        resources:
          requests:
            memory: "100Mi"
          limits:
            memory: "100Mi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: consumer-contacts
  annotations:
    description: "Deployment for consumer contacts"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: consumer-contact-worker
  template:
    metadata:
      labels:
        app: consumer-contact-worker
    spec:
      containers:
      - name: container-consumer-contact-worker
        image: docker.io/eduardo1219/contactconsumer
        ports:
        - containerPort: 4040
        resources:
          requests:
            memory: "100Mi"
          limits:
            memory: "100Mi"
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rabbitmq-app
  annotations:
    description: "Deployment for rabbitmq"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rabbitmq-app
  template:
    metadata:
      labels:
        app: rabbitmq-app
    spec:
      containers:
      - name: rabbitmq-app
        image: rabbitmq:3-management
        ports:
        - containerPort: 5672
        - containerPort: 15672
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus-app
  annotations:
    description: "Deployment for prometheus"
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus-app
  template:
    metadata:
      labels:
        app: prometheus-app
    spec:
      containers:
      - name: prometheus-coll
        image: prom/prometheus:v2.17.1
        ports:
        - containerPort: 9090
        volumeMounts:
            - name: config-volume
              mountPath: /etc/prometheus/
      volumes:
        - name: config-volume
          configMap:
            name: prometheus-config
            defaultMode: 420
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana-app
  annotations:
    description: "Deployment for grafana"
spec:
  selector:
    matchLabels:
       app: grafana-app
  template:
    metadata:
     labels:
       app: grafana-app
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:7.3.1
        # args:
        # - '--config=/grafana.ini'
        ports:
        - containerPort: 3000
        volumeMounts:
            - name: config-volume
              mountPath: /var/lib/grafana
      volumes:
        - name: config-volume
          persistentVolumeClaim:
            claimName: grafana-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: sv-region-api
spec:
  type: NodePort
  selector:
    app: my-app
  ports:
  - protocol: TCP
    port: 5050
    targetPort: 8080
    nodePort: 30080
---
apiVersion: v1
kind: Service
metadata:
  name: sv-contact-api
spec:
  type: NodePort
  selector:
    app: my-contact-api
  ports:
  - protocol: TCP
    port: 4040
    targetPort: 8080
    nodePort: 30071
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-service
spec:
  type: NodePort
  selector:
    app: rabbitmq-app
  ports:
  - protocol: TCP
    port: 5672
    targetPort: 5672
    nodePort: 30070
---
apiVersion: v1
kind: Service
metadata:
  name: rabbitmq-ui
spec:
  type: NodePort
  selector:
    app: rabbitmq-app
  ports:
  - protocol: TCP
    port: 15672
    targetPort: 15672
    nodePort: 30060
---
apiVersion: v1
kind: Service
metadata:
  name: sv-prometheus
spec:
  type: NodePort
  selector:
    app: prometheus-app
  ports:
  - protocol: TCP
    port: 9090
    targetPort: 9090
    nodePort: 30050
---
apiVersion: v1
kind: Service
metadata:
  name: sv-grafana
spec:
  type: NodePort
  selector:
    app: grafana-app
  ports:
  - protocol: TCP
    port: 3000
    targetPort: 3000
    nodePort: 30030